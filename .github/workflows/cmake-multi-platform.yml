# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Flight Controller Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-gd32:
    name: Build GD32 Firmware
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache ARM GCC Toolchain
      uses: actions/cache@v3
      id: cache-gcc
      with:
        path: /usr/bin/arm-none-eabi-*
        key: ${{ runner.os }}-gcc-arm-none-eabi
        restore-keys: |
          ${{ runner.os }}-gcc-arm-none-eabi-

    - name: Install ARM GCC Toolchain
      if: steps.cache-gcc.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-none-eabi

    - name: Build GD32 Project
      run: |
        make clean
        make GD32

    - name: Upload GD32 Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gd32-firmware
        path: |
          out/gd32/multiwii_GD32.hex
          out/gd32/multiwii_GD32.bin
          out/gd32/multiwii_GD32.elf

  build-stm32:
    name: Build STM32 Firmware
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache ARM GCC Toolchain
      uses: actions/cache@v3
      id: cache-gcc
      with:
        path: /usr/bin/arm-none-eabi-*
        key: ${{ runner.os }}-gcc-arm-none-eabi
        restore-keys: |
          ${{ runner.os }}-gcc-arm-none-eabi-

    - name: Install ARM GCC Toolchain
      if: steps.cache-gcc.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-none-eabi

    - name: Build STM32 Project
      run: |
        make clean
        make STM32

    - name: Upload STM32 Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: stm32-firmware
        path: |
          out/stm32/multiwii_STM32.hex
          out/stm32/multiwii_STM32.bin
          out/stm32/multiwii_STM32.elf
